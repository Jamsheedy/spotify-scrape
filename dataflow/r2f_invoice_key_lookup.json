{
	"name": "r2f_invoice_key_lookup",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "TargetUserAccounts"
				}
			],
			"sinks": [
				{
					"name": "maxAccountID"
				},
				{
					"name": "AccountCompositeLookup"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select1"
				},
				{
					"name": "AccountCompositeKeys"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as long,",
				"          sub_id as long,",
				"          username as string,",
				"          member_type as string,",
				"          created_timestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'foundation',",
				"     tableName: 'spotify_user_accounts') ~> TargetUserAccounts",
				"TargetUserAccounts derive(temp = 'temp') ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(temp),",
				"     maxAccountID = max(id)) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          maxAccountID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"TargetUserAccounts aggregate(groupBy(sub_id,",
				"          username,",
				"          member_type),",
				"     count = count()) ~> AccountCompositeKeys",
				"select1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 0) ~> maxAccountID",
				"AccountCompositeKeys sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 0) ~> AccountCompositeLookup"
			]
		}
	}
}