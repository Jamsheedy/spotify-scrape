{
	"name": "df_premtracker_draftboard_s2r",
	"properties": {
		"folder": {
			"name": "premtracker"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Sheets",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "spotify-scrape-dev-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "renameColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     YEAR as string ('2022'),",
				"     SHEET_ID as string ('1DeiwYigE0YNqW6Rw7_h4NBABs4yFRsDLdKAKaF8Pwus')",
				"}",
				"source(output(",
				"          column_1 as string,",
				"          column_2 as string,",
				"          column_3 as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     store: 'googlesheets',",
				"     format: 'rest',",
				"     spreadSheetId: ($SHEET_ID),",
				"     startCell: 'A2',",
				"     endCell: 'C21',",
				"     sheetName: 'Draft Board',",
				"     timestampFormats: ['yyyy.MM.dd HH:mm:ss']) ~> source1",
				"renameColumns derive(season = $YEAR,",
				"          load_date = currentDate('UTC')) ~> derivedColumn1",
				"source1 select(mapColumn(",
				"          Team = column_1,",
				"          Player = column_2,",
				"          Pick = column_3",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renameColumns",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'premtracker_raw',",
				"     tableName: 'draftboard',",
				"     partitionBy('key',",
				"          0,",
				"          load_date",
				"     )) ~> sink1"
			]
		}
	}
}